sd_of_pfc_semantics
=> nrel_main_idtf:
	[Предметная область семантики языка PFC]
	(* <- lang_ru;; *);
<- subject_domain;
<- sc_node_struct;
<- structure;
-> rrel_maximum_studied_object_class: pfc_element;
-> rrel_not_maximum_studied_object_class:
	allocation_element;
	structural_element;
	synchronization_element;
	procedural_element;
	phase;
	non_atomic_procedural_element;
	collapsed_procedural_element;
	expanded_procedural_element;
	operation;
	unit_procedure;
	procedure_starting;
	starting_of_sequence_execution_choice;
	starting_of_parallel_sequence_execution;
	procedure_finishing;
	finishing_of_sequence_execution_choice;
	finishing_of_parallel_sequence_execution;
	recipe_procedure;
	preparation_cottage_cheese_Khutorok;
	preparation_of_milk_mixture;
	preparation_of_curd_mass;
	forming_of_curd_mass;		
	filling_the_curd_mass;		
	recipe_procedure_preparation_curd_mass;		
	selection_of_equipment;		
	supply_line;		
	coagulator;		
	filling;		
	cooking;		
	delivery;		
	washing;		
	operational_procedure_serum_separation;		
	operational_procedure_serum_pumping;		
	operational_procedure;		
	heating;		
	mixing;		
	temperature;		
	direction;		
	time;		
	required_temperature_check;		
	unit_procedure_preparation_curd_mass;		
	overtemperature_check;		
	leaven_introduction;		
	leavening;		
	souring;		
	cutting;		
	decision_about_necessity_mixing;		
	readiness_for_delivery;
-> rrel_explored_relation: 
	pfc_relation;
	nrel_order_of_execution;
	nrel_synchronization_element_link;
	nrel_one_way_link;
	nrel_two_way_link;
	nrel_transition_condition;
	nrel_explicit_transition;
	nrel_implisit_transition;;

sc_node_not_relation -> pfc_element;;
pfc_element
=> nrel_main_idtf:
	[элемент языка PFC]
	(* <- lang_ru;; *); 
=> nrel_strict_inclusion: 
	structural_element;
	procedural_element;
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Элемент языка PFC — атомарный элемент текста на языке PFC.]
			(* <- lang_ru;; *);;
		
		*);;
	*);;

sc_node_not_relation -> allocation_element;;
allocation_element
=> nrel_main_idtf:
	[элемент размещения ресурсов]
	(* <- lang_ru;; *); 
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Элемент размещения ресурсов — структурный элемент языка PFC, указывающий на распределение и согласование использования 			общих ресурсов (сырья, оборудования и др.).]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> structural_element;;
structural_element
=> nrel_main_idtf:
	[структурный элемент]
	(* <- lang_ru;; *);
=> nrel_strict_inclusion: 
	allocation_element;
	synchronization_element;
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Структурный элемент — элемент языка PFC, который вместе со множеством процедурных элементов образует диаграмму языка 				PFC.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> synchronization_element;;
synchronization_element
=> nrel_main_idtf:
	[элемент синхронизации]
	(* <- lang_ru;; *); 
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Элемент синхронизации — структурный элемент языка PFC, обозначающий точку отправления или прибытия при движении 				продукта от одного процедурного элемента к другому, или просто процедурный элемент, выполнение 	которого опосредованно 				зависит от выполнения другого процедурного элемента.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> procedural_element;;
procedural_element
=> nrel_main_idtf:
	[процедурный элемент]
	(* <- lang_ru;; *);
<= nrel_subdividing:
{
	phase;
	non_atomic_procedural_element	
};
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Процедурный элемент — элемент процедурной иерархии.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> phase;;
phase
=> nrel_main_idtf:
	[атомарный процедурный элемент]
	(* <- lang_ru;; *);
=> nrel_idtf:
	[фаза]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Атомарный процедурный элемент — процедурный элемент, который не содержит внутри себя другие процедурные элементы.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> non_atomic_procedural_element;;
non_atomic_procedural_element
=> nrel_main_idtf:
	[неатомарный процедурный элемент]
	(* <- lang_ru;; *);
<= nrel_subdividing:
{
	collapsed_procedural_element;
	expanded_procedural_element
};
=> nrel_strict_inclusion: 
	operation;
	unit_procedure;
	recipe_procedure;
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Неатомарный процедурный элемент — процедурный элемент, который содержит внутри себя другие процедурные элементы.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> collapsed_procedural_element;;
collapsed_procedural_element
=> nrel_main_idtf:
	[свёрнутый процедурный элемент]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Свёрнутый процедурный элемент — такое состояние процедурного элемента, когда его содержимое не указано явно на 			диаграмме.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> expanded_procedural_element;;
expanded_procedural_element
=> nrel_main_idtf:
	[развёрнутый процедурный элемент]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Развёрнутый процедурный элемент — такое состояние процедурного элемента, когда его содержимое указано явно в виде 				совокупности процедурных элементов и связей между ними.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> operation;;
operation
=> nrel_main_idtf:
	[операция]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Операция — второй уровень процедурной иерархии.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> unit_procedure;;
unit_procedure
=> nrel_main_idtf:
	[процедура технологической установки]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Процедура технологической установки — третий уровень процедурной иерархии.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> procedure_starting;;
procedure_starting
=> nrel_main_idtf:
	[начало выполнения процедуры]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Начало выполнения процедуры — каждый элемент множества начала выполнения процедуры представляет собой класс временных 				сущностей, у которых совпадает момент начала выполнения процедурного элемента.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> starting_of_sequence_execution_choice;;
starting_of_sequence_execution_choice
=> nrel_main_idtf:
	[начало выбора последовательности исполнения]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Начало выбора последовательности исполнения — каждый элемент множества начало выбора последовательности выполнения 				представляет собой класс временных сущностей, у которых совпадает момент начала выбора одной из ветвей исполнения 				процедурного элемента.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> starting_of_parallel_sequence_execution;;
starting_of_parallel_sequence_execution
=> nrel_main_idtf:
	[начало параллельного исполнения последовательности]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*

		-> rrel_example: 
			[Начало параллельного выполнения последовательности — каждый элемент множества начало параллельного выполнения 				последовательности представляет собой класс временных сущностей, у которых совпадает момент начала параллельного 				исполнения множества процедурных элементов.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> procedure_finishing;;
procedure_finishing
=> nrel_main_idtf:
	[конец выполнения процедуры]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Конец выполнения процедуры — каждый элемент множества конец выполнения процедуры представляет собой класс временных 				сущностей, у которых совпадает момент конца выполнения процедурного элемента.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> finishing_of_sequence_execution_choice;;
finishing_of_sequence_execution_choice
=> nrel_main_idtf:
	[конец выбора последовательности выполнения]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Конец выбора последовательности выполнения — каждый элемент множества конец выбора последовательности выполнения 				представляет собой класс временных сущностей, у которых совпадает момент конца выполнения одной из выбранных ветвей 				исполнения процедурного элемента.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> finishing_of_parallel_sequence_execution;;
finishing_of_parallel_sequence_execution
=> nrel_main_idtf:
	[конец параллельного исполнения последовательности]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Конец параллельного исполнения последовательности — каждый элемент множества конец параллельного исполнения 				последовательности представляет собой класс временных сущностей, у которых совпадает момент конца параллельного 			исполнения множества процедурных элементов.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> recipe_procedure;;
recipe_procedure
=> nrel_main_idtf:
	[процедура]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Процедура — наивысший (четвёртый) уровень процедурной иерархии.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> pfc_relation;;
pfc_relation
=> nrel_main_idtf:
	[связь языка PFC*]
	(* <- lang_ru;; *);
=> nrel_strict_inclusion: 
	nrel_order_of_execution;
	nrel_synchronization_element_link;
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Связь языка PFC* — бинарное отношение, элементами связки которого являются элементы языка PFC.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> nrel_order_of_execution;;
nrel_order_of_execution
=> nrel_main_idtf:
	[порядок выполнения*]
	(* <- lang_ru;; *);
<= nrel_subdividing:
{
	nrel_explicit_transition;
	nrel_implisit_transition
};
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Порядок выполнения* — бинарное отношение, первым элементом связки которого является элемент языка PFC, который должен 				быть выполнен раньше элемента языка PFC, находящегося на месте второго элемента связки.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> nrel_synchronization_element_link;;
nrel_synchronization_element_link
=> nrel_main_idtf:
	[ссылка на элемент синхронизации*]
	(* <- lang_ru;; *);
=> nrel_strict_inclusion: 
	nrel_one_way_link;
	nrel_two_way_link;
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Ссылка на элемент синхронизации* — бинарное отношение, компонентами связок которого являются знаки элементов 				синхронизации.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> nrel_one_way_link;;
nrel_one_way_link
=> nrel_main_idtf:
	[односторонняя ссылка*]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Односторонняя ссылка* — бинарное ориентированное отношение, первым компонентом связки которого является знак элемента 				синхронизации, со стороны которого осуществляется осуществляется передача материала, вторым - знак элемента 				синхронизации, принимающего этот материал.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> nrel_two_way_link;;
nrel_two_way_link
=> nrel_main_idtf:
	[двусторонняя ссылка*]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Двусторонняя ссылка* — бинарное неориентированное отношение, компонентами связок которого являются элементы 				синхронизации, осуществляющие одновременно передачу и приёмку материала.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> nrel_transition_condition;;
nrel_transition_condition
=> nrel_main_idtf:
	[условие перехода*]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Условие перехода* — бинарное отношение, первым компонентом связок которого является связка отношения явный переход*, 				вторым - знак структуры, содержащей ожидаемый результат выполнения процедуры.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> nrel_explicit_transition;;
nrel_explicit_transition
=> nrel_main_idtf:
	[явный переход*]
	(* <- lang_ru;; *);
=> nrel_idtf:
	[условный переход*]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Явный переход* — бинарное отношение, вторым компонентом связки которого является процедурный элемент, выполнение 				которого начнётся после выполнения процедурного элемента, являющегося первым компонентом связки и проверки некоторого 				условия.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_norole_relation -> nrel_implisit_transition;;
nrel_implisit_transition
=> nrel_main_idtf:
	[неявный переход*]
		(* <- lang_ru;; *);
=> nrel_idtf:
	[безусловный переход*]
	(* <- lang_ru;; *);
<- rrel_key_sc_element:
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation: 
		...
		(*
		-> rrel_example: 
			[Неявный переход* — бинарное отношение, первым компонентом связки которого является процедурный элемент, после 				выполнения которого начнётся выполнение процедурного элемента, являющегося вторым компонентом связки отношения.]
			(* <- lang_ru;; *);;
		*);;
	*);;

sc_node_not_relation -> preparation_cottage_cheese_Khutorok;;
preparation_cottage_cheese_Khutorok
=> nrel_main_idtf:
	[мастер-рецепт для приготовления творога Хуторок]
	(* <- lang_ru;; *);;

sc_node_not_relation -> preparation_of_milk_mixture;;
preparation_of_milk_mixture
=> nrel_main_idtf:
	[приготовление молочной смеси]
	(* <- lang_ru;; *);;

sc_node_not_relation -> preparation_of_curd_mass;;
preparation_of_curd_mass
=> nrel_main_idtf:
	[приготовление творожной массы]
	(* <- lang_ru;; *);;

sc_node_not_relation -> forming_of_curd_mass;;
forming_of_curd_mass
=> nrel_main_idtf:
	[формовка творожной массы]
	(* <- lang_ru;; *);;
		
sc_node_not_relation -> filling_the_curd_mass;;
filling_the_curd_mass
=> nrel_main_idtf:
	[фасовка творожной массы]
	(* <- lang_ru;; *);;

sc_node_not_relation -> recipe_procedure_preparation_curd_mass;;
recipe_procedure_preparation_curd_mass
=> nrel_main_idtf:
	[рецептурная процедура для приготовления творожной массы]
	(* <- lang_ru;; *);;

sc_node_not_relation -> selection_of_equipment;;
selection_of_equipment
=> nrel_main_idtf:
	[выбор оборудования]
	(* <- lang_ru;; *);;

sc_node_not_relation -> supply_line;;
supply_line
=> nrel_main_idtf:
	[линия подачи]
	(* <- lang_ru;; *);;

sc_node_not_relation -> coagulator;;
coagulator
=> nrel_main_idtf:
	[коагулятор]
	(* <- lang_ru;; *);;

sc_node_not_relation -> filling;;
filling
=> nrel_main_idtf:
	[наполнение]
	(* <- lang_ru;; *);;
		
sc_node_not_relation -> cooking;;
cooking
=> nrel_main_idtf:
	[приготовление]
	(* <- lang_ru;; *);;
		
sc_node_not_relation -> delivery;;
delivery
=> nrel_main_idtf:
	[выдача]
	(* <- lang_ru;; *);;

sc_node_not_relation -> washing;;
washing
=> nrel_main_idtf:
	[мойка]
	(* <- lang_ru;; *);;

sc_node_not_relation -> operational_procedure_serum_separation;;
operational_procedure_serum_separation
=> nrel_main_idtf:
	[операционная процедура для операции "Отделение сыворотки"]
	(* <- lang_ru;; *);;

sc_node_not_relation -> operational_procedure_serum_pumping;;
operational_procedure_serum_pumping
=> nrel_main_idtf:
	[операционная процедура для операции "Откачка сыворотки"]
	(* <- lang_ru;; *);;

sc_node_not_relation -> operational_procedure;;
operational_procedure
=> nrel_main_idtf:
	[операционная процедура]
	(* <- lang_ru;; *);;

sc_node_not_relation -> heating;;
heating
=> nrel_main_idtf:
	[подогрев]
	(* <- lang_ru;; *);;

sc_node_not_relation -> mixing;;
mixing
=> nrel_main_idtf:
	[перемешивание]
	(* <- lang_ru;; *);;		

sc_node_not_relation -> temperature;;
temperature
=> nrel_main_idtf:
	[температура]
	(* <- lang_ru;; *);;

sc_node_not_relation -> direction;;
direction
=> nrel_main_idtf:
	[направление]
	(* <- lang_ru;; *);;

sc_node_not_relation -> time;;
time
=> nrel_main_idtf:
	[время]
	(* <- lang_ru;; *);;

sc_node_not_relation -> required_temperature_check;;
required_temperature_check
=> nrel_main_idtf:
	[проверка температуры]
	(* <- lang_ru;; *);;

sc_node_not_relation -> unit_procedure_preparation_curd_mass;;
unit_procedure_preparation_curd_mass
=> nrel_main_idtf:
	[аппаратная процедура для приготовления творожной массы]
	(* <- lang_ru;; *);;

sc_node_not_relation -> overtemperature_check;;
overtemperature_check
=> nrel_main_idtf:
	[проверка на превышение температуры]
	(* <- lang_ru;; *);;

sc_node_not_relation -> leaven_introduction;;
leaven_introduction
=> nrel_main_idtf:
	[внесение закваски]
	(* <- lang_ru;; *);;

sc_node_not_relation -> leavening;;
leavening
=> nrel_main_idtf:
	[заквашивание]
	(* <- lang_ru;; *);;

sc_node_not_relation -> souring;;
souring
=> nrel_main_idtf:
	[сквашивание]
	(* <- lang_ru;; *);;

sc_node_not_relation -> cutting;;
cutting
=> nrel_main_idtf:
	[разрезка]
	(* <- lang_ru;; *);;

sc_node_not_relation -> decision_about_necessity_mixing;;
decision_about_necessity_mixing
=> nrel_main_idtf:
	[решение о необходимости вымешивать]
	(* <- lang_ru;; *);;

sc_node_not_relation -> readiness_for_delivery;;
readiness_for_delivery
=> nrel_main_idtf:
	[готов к выдаче]
	(* <- lang_ru;; *);;
